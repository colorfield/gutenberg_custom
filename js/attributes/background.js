/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/'use strict';

var addFilter = wp.hooks.addFilter;
var InspectorControls = wp.blockEditor.InspectorControls;
var createHigherOrderComponent = wp.compose.createHigherOrderComponent;
var _wp$components = wp.components,
    ToggleControl = _wp$components.ToggleControl,
    PanelBody = _wp$components.PanelBody;

var __ = Drupal.t;

var includedBlocks = ['core/paragraph', 'core/heading'];

var addHasBackgroundAttribute = function addHasBackgroundAttribute(settings) {
  if (includedBlocks.includes(settings.name)) {
    settings.attributes = Object.assign(settings.attributes, {
      hasBackground: {
        type: 'boolean',
        default: false
      }
    });
  }
  return settings;
};

addFilter('blocks.registerBlockType', 'custom/attributes/has-background', addHasBackgroundAttribute);

var withHasBackgroundControls = createHigherOrderComponent(function (BlockEdit) {
  return function (props) {
    var name = props.name,
        attributes = props.attributes,
        setAttributes = props.setAttributes,
        isSelected = props.isSelected;
    var hasBackground = attributes.hasBackground;

    if (hasBackground === undefined) {
      setAttributes({ hasBackground: false });
    }
    return React.createElement(
      'div',
      null,
      React.createElement(BlockEdit, props),
      isSelected && includedBlocks.includes(name) && React.createElement(
        InspectorControls,
        null,
        React.createElement(
          PanelBody,
          null,
          React.createElement(ToggleControl, {
            label: __('Background'),
            checked: !!hasBackground,
            onChange: function onChange() {
              return setAttributes({ hasBackground: !hasBackground });
            },
            help: __('Toggle background.')
          })
        )
      )
    );
  };
}, 'withHasBackgroundControls');

addFilter('editor.BlockEdit', 'custom/controls/has-background', withHasBackgroundControls);

var withHasBackgroundBlockClass = createHigherOrderComponent(function (BlockListBlock) {
  return function (props) {
    var attributes = props.attributes;
    var hasBackground = attributes.hasBackground;

    props.className = hasBackground ? 'attribute__has-background' : 'attribute__no-background';
    return React.createElement(BlockListBlock, props);
  };
}, 'withHasBackgroundBlockClass');

addFilter('editor.BlockListBlock', 'custom/editor-class/has-background', withHasBackgroundBlockClass);

var addUnpublishedClass = function addUnpublishedClass(extraProps, blockType, attributes) {
  if (includedBlocks.includes(blockType.name)) {
    var hasBackground = attributes.hasBackground;

    extraProps.className = hasBackground ? 'attribute__has-background' : 'attribute__no-background';
  }
  return extraProps;
};

addFilter('blocks.getSaveContent.extraProps', 'custom/class/has-background', addUnpublishedClass);